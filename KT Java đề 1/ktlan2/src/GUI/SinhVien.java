/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Dao.StudentDAO;
import POJO.DbConnect;
import POJO.Student;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.plaf.basic.BasicListUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class SinhVien extends javax.swing.JFrame {

    DbConnect db = new DbConnect();
    Connection conn;
    Statement statement =null;
    ResultSet rs = null;
    /**
     * Creates new form SinhVien
     */
    public SinhVien() throws SQLException {
        initComponents();
        hienthi();
    }

    public void hienthi() throws SQLException{
        try {
            conn = db.getConnection();
            statement = conn.createStatement();
            String sql = "SELECT * FROM students";
            rs = statement.executeQuery(sql);
            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn("Mã Sinh Viên");
            dtm.addColumn("Họ Sinh Viên");
            dtm.addColumn("Tên Sinh Viên");
            dtm.addColumn("Email");
            dtm.addColumn("Giới Tính");
            dtm.addColumn("Quốc Tịch");
            dtm.addColumn("Thành Phố");
            dtm.addColumn("Số Điện Thoại");
            dtm.addColumn("Ngày Sinh");
            while(rs.next())
            {
                Vector vt = new Vector();
                vt.add(rs.getString("student_id"));  
                vt.add(rs.getString("first_name"));
                vt.add(rs.getString("last_name"));
                vt.add(rs.getString("email"));
                vt.add(rs.getString("gender"));
                vt.add(rs.getString("country"));
                vt.add(rs.getString("city"));
                vt.add(rs.getInt("phone_number"));  
                vt.add(rs.getDate("date_of_birth"));  
                dtm.addRow(vt);
            }
            this.tblLopHoc.setModel(dtm);
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        tblLopHoc.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(tblLopHoc.getSelectedRow()>=0)
                {
                    txtStudentId.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 0).toString());
                    txtFirstName.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 1).toString());
                    txtLastName.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 2).toString());
                    txtEmail.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 3).toString());
                    cbGender.setSelectedItem(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 4).toString());
                    txtCountry.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 5).toString());
                    txtCity.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 6).toString());
                    txtPhone.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 7).toString());
                    dateChooser.setDate((java.util.Date) tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 8));
                }
            }
        });
    }
    public void xoaTrang() throws SQLException{
        txtStudentId.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtEmail.setText("");
        cbGender.setSelectedItem(null); 
        txtCountry.setText("");
        txtCity.setText("");
        txtPhone.setText("");
        dateChooser.setDate(null); 
        hienthi();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLopHoc = new javax.swing.JTable();
        btn_Them = new javax.swing.JButton();
        btn_Xoa = new javax.swing.JButton();
        btn_CapNhat = new javax.swing.JButton();
        btn_Refresh = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 204));
        jLabel1.setText("BẢNG THÔNG TIN SINH VIÊN");

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã Sinh Viên: ");

        jLabel3.setText("Họ Sinh Viên: ");

        jLabel4.setText("Ngày Sinh:");

        jLabel5.setText("Số Điện Thoại:");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));

        jLabel6.setText("Giới Tính:");

        tblLopHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sinh Viên", "Họ", "Tên", "Email", "Giới Tính", "Quốc Tịch", "Thành Phố", "Số Điện Thoại", "Ngày Sinh"
            }
        ));
        tblLopHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLopHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLopHoc);

        btn_Them.setBackground(new java.awt.Color(0, 0, 255));
        btn_Them.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_Them.setForeground(new java.awt.Color(255, 153, 255));
        btn_Them.setText("Thêm");
        btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemActionPerformed(evt);
            }
        });

        btn_Xoa.setBackground(new java.awt.Color(102, 255, 102));
        btn_Xoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_Xoa.setText("Xóa");
        btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaActionPerformed(evt);
            }
        });

        btn_CapNhat.setBackground(new java.awt.Color(255, 255, 0));
        btn_CapNhat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_CapNhat.setText("Cập Nhật");
        btn_CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CapNhatActionPerformed(evt);
            }
        });

        btn_Refresh.setBackground(new java.awt.Color(0, 255, 255));
        btn_Refresh.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_Refresh.setText("Làm Mới");
        btn_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RefreshActionPerformed(evt);
            }
        });

        btn_Exit.setBackground(new java.awt.Color(255, 153, 153));
        btn_Exit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_Exit.setText("Thoát");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        jLabel7.setText("Email:");

        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });

        jLabel8.setText("Quốc Tịch:");

        jLabel9.setText("Thành Phố");

        jLabel10.setText("Tên Sinh Viên: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_CapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Them, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFirstName)
                                    .addComponent(txtStudentId))
                                .addGap(294, 294, 294)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(88, 88, 88)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmail)
                                            .addComponent(txtCity)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(69, 69, 69)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                            .addComponent(txtPhone))))
                                .addGap(197, 197, 197))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_Them)
                        .addGap(12, 12, 12)
                        .addComponent(btn_Xoa)
                        .addGap(18, 18, 18)
                        .addComponent(btn_CapNhat)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Refresh)
                        .addGap(13, 13, 13)
                        .addComponent(btn_Exit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btn_CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CapNhatActionPerformed
        Connection conn = db.getConnection();
            try {
                if (txtStudentId.getText().equals("") || txtFirstName.getText().equals("") || txtLastName.getText().equals("") || 
                    txtEmail.getText().equals("") || txtCountry.getText().equals("") || txtCity.getText().equals("") || 
                    txtPhone.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu trước");
                } else {
                    int selectedRow = tblLopHoc.getSelectedRow();
                    if (selectedRow >= 0) {
                        String studentId = tblLopHoc.getValueAt(selectedRow, 0).toString();

                        String sql_update = "UPDATE students SET first_name = ?, last_name = ?, email = ?, gender = ?, country = ?, city = ?, phone_number = ?, date_of_birth = ? WHERE student_id = ?";
                        PreparedStatement preparedStatement = conn.prepareStatement(sql_update);

                        preparedStatement.setString(1, txtFirstName.getText());
                        preparedStatement.setString(2, txtLastName.getText());
                        preparedStatement.setString(3, txtEmail.getText());
                        preparedStatement.setString(4, cbGender.getSelectedItem().toString());
                        preparedStatement.setString(5, txtCountry.getText());
                        preparedStatement.setString(6, txtCity.getText());
                        preparedStatement.setString(7, txtPhone.getText());
                        preparedStatement.setDate(8, new java.sql.Date(dateChooser.getDate().getTime()));
                        preparedStatement.setString(9, studentId);

                        int result = preparedStatement.executeUpdate();
                        if (result > 0) {
                            JOptionPane.showMessageDialog(this, "Update thành công");
                            xoaTrang();
                            hienthi();  // Refresh the table to show updated data
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Chọn sinh viên để cập nhật");
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
    }//GEN-LAST:event_btn_CapNhatActionPerformed

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemActionPerformed
        conn = db.getConnection();
        try {
            if (txtStudentId.getText().equals("") || txtFirstName.getText().equals("") || txtLastName.getText().equals("") || 
                    txtEmail.getText().equals("") || txtCountry.getText().equals("") || txtCity.getText().equals("") || 
                    txtPhone.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "Bạn cần nhập đủ dữ liệu trước khi thêm");
            }
            else{
                StringBuffer sb = new StringBuffer();
                String sql_check_pk = "SELECT * FROM students";
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql_check_pk);
                if(sb.length()>0){
                    JOptionPane.showMessageDialog(this,sb.toString());
                }else{
                    String sql_insert = "Insert into students values(N'"+txtStudentId.getText()+"', N'"+txtFirstName.getText()+"', N'"+txtLastName.getText()+"', N'"+txtEmail.getText()+"', N'"+txtCountry.getText()+"', N'"+txtCity.getText()+"', N'"+txtPhone.getText()+"')";
                    st= conn.createStatement();
                    int kq = st.executeUpdate(sql_insert);
                    if(kq>0)
                    {
                        JOptionPane.showMessageDialog(this,"Thêm mới thành công");
                        xoaTrang();
                    }

                }
                st.close();
            }
            conn.close();
            rs.close();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_ThemActionPerformed

    private void btn_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RefreshActionPerformed
        refreshData();
    }//GEN-LAST:event_btn_RefreshActionPerformed

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryActionPerformed

    private void btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaActionPerformed
      conn = db.getConnection();
        try {

            Statement st = conn.createStatement();
            String sql_insert = "DELETE  FROM students WHERE student_id= "+ tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 0) + "";
            st = conn.createStatement();
            int kq = st.executeUpdate(sql_insert);
            if (kq > 0) {
                JOptionPane.showMessageDialog(this, "DELETE thành công");
                xoaTrang();
            }
            st.close();
            conn.close();
            rs.close();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_XoaActionPerformed

    private void tblLopHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLopHocMouseClicked
        int x = tblLopHoc.getSelectedRow();
        if(x>=0)
        {
            txtStudentId.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 0).toString());
            txtFirstName.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 1).toString());
            txtLastName.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 2).toString());
            txtEmail.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 3).toString());
            cbGender.setSelectedItem(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 4).toString());
            txtCountry.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 5).toString());
            txtCity.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 6).toString());
            txtPhone.setText(tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 7).toString());
            dateChooser.setDate((java.util.Date) tblLopHoc.getValueAt(tblLopHoc.getSelectedRow(), 8));
        }
    }//GEN-LAST:event_tblLopHocMouseClicked
  
    private void refreshData() {
        try {
            conn = db.getConnection();
            String sql = "SELECT * FROM students";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // Clear existing data in your GUI component (example: JTable)
            DefaultTableModel model = (DefaultTableModel) tblLopHoc.getModel();
            model.setRowCount(0); // Clear existing rows

            // Populate the table with the updated data
            while (rs.next()) {
                Object[] row = {
                    rs.getString("student_id"),
                    rs.getString("first_name"),
                    rs.getString("last_name"),
                    rs.getString("email"),
                    rs.getString("gender"),
                    rs.getString("country"),
                    rs.getString("city"),
                    rs.getInt("phone_number"),
                    rs.getDate("date_of_birth")
                };
                model.addRow(row);
            }

            rs.close();
            ps.close();
            conn.close();

            // Optionally, display a message or perform additional actions after refresh
            JOptionPane.showMessageDialog(this, "Dữ liệu sinh viên đã được cập nhật");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật dữ liệu sinh viên: " + e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SinhVien().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SinhVien.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_CapNhat;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Refresh;
    private javax.swing.JButton btn_Them;
    private javax.swing.JButton btn_Xoa;
    private javax.swing.JComboBox<String> cbGender;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLopHoc;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
