/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nhom11_qltrasua;

import Model.PhanQuyen;
import nhom11_qltrasua.frmKhachHang;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LINHPRO
 */
public class frmNhanVien extends javax.swing.JFrame {

    /**
     * Creates new form frmNhanVien
     */
    public frmNhanVien() {
        initComponents();
        
        loadfrmNhanVien();
        txtMaNV.setEditable(false);
        txtHinh.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtHinh = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        lblHinh = new javax.swing.JLabel();
        lblDuongDan = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtChucVu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        btnTaoMa = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        cboGioiTinh = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nhân viên");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Trang Quản Lí Nhân Viên ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Bảng Quản Lí Nhân Viên");

        tblNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Tên Nhân Viên", "Giới Tính", "SĐT", "Hình ", "Chức Vụ", "Địa Chỉ"
            }
        ));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Tên nhân viên:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Giới tính:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("SĐT:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Hình:");

        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSDTKeyTyped(evt);
            }
        });

        txtHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHinhActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Tìm kiếm nhân viên:");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        lblHinh.setText("Nhấn để chọn hình");
        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        lblDuongDan.setText("Tên hình");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Chức vụ:");

        txtChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChucVuActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Mã nhân viên:");

        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Địa chỉ:");

        txtDiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiaChiActionPerformed(evt);
            }
        });

        btnTaoMa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTaoMa.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\add (1).png")); // NOI18N
        btnTaoMa.setText("Tạo mã");
        btnTaoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\search-interface-symbol.png")); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseClicked(evt);
            }
        });
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        cboGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ ", "Khác" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(txtMaNV)
                                .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTaoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDuongDan)
                .addGap(211, 211, 211))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtHinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(lblDuongDan)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\add (1).png")); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\refresh.png")); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\Update.png")); // NOI18N
        btnSua.setText("Cập nhật");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\Delete.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnDong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDong.setIcon(new javax.swing.ImageIcon("D:\\HocKy6\\Java\\Project\\Linh\\BanTraSua_BienTieuLinh_NguyenCatTuong\\icon\\close.png")); // NOI18N
        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(btnThem)
                .addGap(35, 35, 35)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnSua)
                .addGap(39, 39, 39)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnDong)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDong, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(431, 431, 431))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(306, 306, 306))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chonHang() //Nhấn vào 1 hàng trong bảng thì nó sẽ hiện lên những TextBox
    {
        int chonHang = tblNhanVien.getSelectedRow(); 
        
        if (chonHang != -1)
        {
            txtMaNV.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 0)));
            txtTenNV.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 1)));
            
            // Lấy dữ liệu cho ComboBox từ hàng đã chọn
            // Đặt giá trị cho ComboBox
            
           String gioiTinh = tblNhanVien.getValueAt(chonHang, 2).toString().trim();
           
           int viTri = 0;
           
            if(gioiTinh.equals("Nữ"))
                viTri = 1;
            else if(gioiTinh.equals("Khác"))
                viTri = 2;
            else 
             viTri = 0;
            
            cboGioiTinh.setSelectedIndex(viTri);
            
            txtSDT.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 3)));
            
            txtHinh.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 4)));
            
            // Lấy tên hình ảnh từ cột tương ứng (giả sử cột hình ảnh là cột thứ 4 - index 3)
            String imageName = String.valueOf(tblNhanVien.getValueAt(chonHang, 4));
            
            txtChucVu.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 5)));
            txtDiaChi.setText(String.valueOf(tblNhanVien.getValueAt(chonHang, 6)));
        
            //Gọi phương thức loadHinh để tải và hiển thị hình ảnh lên JLabel
            loadHinh(imageName);
        }
    }
    
    private void xoaText()
    {
        txtTimKiem.setText("");
        txtMaNV.setText("");
        txtTenNV.setText("");
        
        //txtGioiTinh.setText("");
        cboGioiTinh.setSelectedIndex(1); 
        
        txtSDT.setText("");
        txtHinh.setText("");
        txtChucVu.setText("");
        txtDiaChi.setText("");

        txtTimKiem.requestFocus();
        
        // Đặt icon của JLabel lblHinh thành null để xóa bỏ hình ảnh hiện tại
        lblHinh.setIcon(null);
    }
    
     private void loadfrmNhanVien()
    {
        try 
        {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
            
            String sql= "select MANV as N'Mã Nhân Viên', TENNV as N'Tên Nhân Viên', GIOITINH as N'Giới Tính', SDT as N'Số Điện Thoại', IdHinh as N'Hình', CHUCVU as N'Chức Vụ', DIACHI as N'Địa Chỉ' from NHANVIEN where TrangThai = 1";
            Statement st = (Statement) con.createStatement();
            
//            if(con != null) //Kiểm tra nếu kết nối thành công thì sẽ hiện ra 1 bảng thông báo thành công 
//            {
//                JOptionPane.showMessageDialog(null, "Kết nối thành công !!!");
//            }
            
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblNhanVien.getModel();
            ResultSet rs = st.executeQuery(sql);
            defaultTableModel.setRowCount(0);
            
            // Tạo ComboBox cho giới tính
//            JComboBox<String> cboGioiTinh = new JComboBox<>(new String[]{"Nam", "Nữ", "Khác"});

            // Thay thế cột "Giới Tính" bằng ComboBox mới
//            tblNhanVien.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(cboGioiTinh));
            
            while (rs.next())
            {
                // Hiển thị giá trị giới tính tương ứng trong ComboBox cho từng hàng
                String gioiTinh = rs.getString("Giới Tính");
                cboGioiTinh.setSelectedItem(gioiTinh);
                
                Object object[] = {rs.getString("Mã Nhân Viên"),rs.getString("Tên Nhân Viên"),rs.getString("Giới Tính"),rs.getString("Số Điện Thoại"),rs.getString("Hình"),rs.getString("Chức Vụ"),rs.getString("Địa Chỉ")};
                defaultTableModel.addRow(object);
            }
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    public void loadHinh(String image) 
    {
        // Đường dẫn tới tệp hình ảnh (có thể cần điều chỉnh nếu đường dẫn thay đổi)
        String imagePath = "src\\HinhNhanVien\\" + image;
    
        // Tạo một ImageIcon từ đường dẫn tệp
        ImageIcon image1 = new ImageIcon(imagePath);

        // Lấy đối tượng Image từ ImageIcon
        Image im = image1.getImage();

        // Thay đổi kích thước ảnh để phù hợp với kích thước của lblHinh với chế độ mịn
        ImageIcon icon = new ImageIcon(im.getScaledInstance(lblHinh.getWidth(), 
        lblHinh.getHeight(), Image.SCALE_SMOOTH));

        // Đặt icon đã thay đổi kích thước vào nhãn lblHinh
        lblHinh.setIcon(icon);
    }
  
    
    private String ChonHinh() {
    JFileChooser open = new JFileChooser();
    
    // Thiết lập thư mục mặc định cho JFileChooser
    File defaultDirectory = new File("src\\HinhNhanVien");
    open.setCurrentDirectory(defaultDirectory);

    // Hiển thị hộp thoại chọn tệp và lưu kết quả lựa chọn
    int kq = open.showOpenDialog(null);
    
    // Nếu người dùng chọn một tệp (APPROVE_OPTION)
    if (kq == JFileChooser.APPROVE_OPTION) {
        // Lấy tệp được chọn
        File f = open.getSelectedFile();
        
        // Lấy tên tệp từ đường dẫn (chỉ tên tệp, không bao gồm đường dẫn)
        return f.getName();
    }
    
    // Trường hợp người dùng không chọn tệp hoặc bấm Hủy, trả về chuỗi rỗng
    return "";
}


    
    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        // TODO add your handling code here:
        int kq= JOptionPane.showConfirmDialog(this, "Bạn có muốn đóng trang này không ???","Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(kq==JOptionPane.YES_OPTION)
        {
            PhanQuyen  phanQuyen = new PhanQuyen();
if(phanQuyen.getTaiKhoanCu().equals("admin"))
{
       frmMain m = new frmMain();
        m.setVisible(true);
        this.dispose();
}
else 
{
    frmMainNhanVien nhanVien = new frmMainNhanVien();
    nhanVien.setVisible(true);
    this.dispose();;
}
        }
    }//GEN-LAST:event_btnDongActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        xoaText();
        loadfrmNhanVien();
        txtTenNV.requestFocus();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        
        //Đang lỗi ko xóa dc 
        
        //int kq = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không ???","Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(txtMaNV.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Hãy chọn nhân viên cần xóa trong bảng!!!");
            return;
        }
        else
        try 
        {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user, pass);
                
            String sql = "update NHANVIEN set TrangThai = ? where MANV = ?";
            PreparedStatement st = con.prepareStatement(sql);
           
            st.setInt(1, 0);
            st.setString(2,txtMaNV.getText());
           
            int check = st.executeUpdate();
            if(check  > 0 )
               JOptionPane.showMessageDialog(null, "Xóa thành công !!!");
            
            con.close();
            xoaText();
            loadfrmNhanVien();
            
       } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void txtDiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiaChiActionPerformed

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void txtChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChucVuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChucVuActionPerformed

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        // TODO add your handling code here:


        // Gọi phương thức ChonHinh() để mở hộp thoại chọn hình ảnh và trả về tên tệp đã chọn
        String tenHinh = ChonHinh();
    
        // Kiểm tra nếu người dùng đã chọn một tệp hình ảnh hợp lệ
        if (!tenHinh.isEmpty()) 
        {
            // Cập nhật JLabel lblDuongDan để hiển thị tên tệp hình ảnh
//            lblDuongDan.setText(tenHinh);

            // Cập nhật JTextField txtHinh với tên tệp hình ảnh mới
            txtHinh.setText(tenHinh);

            // Xây dựng đường dẫn đầy đủ tới tệp hình ảnh mới
            String duongDanDayDu = "src\\HinhNhanVien\\" + tenHinh;
        
            // Gọi phương thức loadHinh để hiển thị hình ảnh lên JLabel lblHinh
            loadHinh(duongDanDayDu);
            
            // Cập nhật lại giao diện của JLabel để hiển thị hình ảnh mới
            lblHinh.setIcon(new ImageIcon(duongDanDayDu)); // Cập nhật hình ảnh trực tiếp vào JLabel
            lblHinh.repaint(); // Hoặc lblHinh.revalidate();
        
            // Cập nhật JTable tblNhanVien với tên tệp hình ảnh mới nếu có hàng nào được chọn
            int selectedRow = tblNhanVien.getSelectedRow();
            if (selectedRow != -1) 
            {
                tblNhanVien.setValueAt(tenHinh, selectedRow, 4); // Cập nhật tên tệp trong cột thứ 5
            }
        }
        chonHang();
    }//GEN-LAST:event_lblHinhMouseClicked

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void txtHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHinhActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed

    private void btnTaoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaActionPerformed
        // TODO add your handling code here:

        try {
            String maNV = txtMaNV.getText();

            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";

            Connection con;
            con = DriverManager.getConnection(url, user,pass);

            //Tạo mã tự động
            String sql = "SELECT MAX(MaNV) FROM NhanVien";

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            String maNVCuoi = null;

            if (rs.next()) {
                maNVCuoi = rs.getString(1);
            }

            // Xác định mã khách hàng tiếp theo
            if (maNVCuoi == null) {
                maNV = "NV001"; // Nếu không có mã khách hàng nào trong cơ sở dữ liệu, bắt đầu từ "KH001"
            } else {
                // Trích xuất số từ mã khách hàng cuối cùng và tăng giá trị đó lên 1
                int so = Integer.parseInt(maNVCuoi.substring(2)); // Bỏ qua hai ký tự đầu tiên ("KH")
                so++;
                // Format lại số để có ba chữ số (ví dụ: 001, 012, 123)
                String soMoi = String.format("%03d", so);
                maNV = "NV" + soMoi;
            }

            // Hiển thị mã khách hàng mới trên giao diện hoặc thêm vào trường mã khách hàng tương ứng
            // Ví dụ:
            xoaText();
            txtMaNV.setText(maNV);

            txtSDT.setText("0");
            
            txtTenNV.requestFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTaoMaActionPerformed

    private void btnTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseClicked
        // TODO add your handling code here:
        if(txtTimKiem.getText().isEmpty())
        {
           JOptionPane.showMessageDialog(null, "Hãy điền tên nhân viên cần tìm!!!");
           return;
        }
        // Lấy dữ liệu từ trường nhập liệu tên khách hàng
        String tenNhanVien = txtTimKiem.getText().trim();

        // Xóa bảng hiển thị kết quả tìm kiếm (nếu có)
        DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0);

        // Chuẩn bị truy vấn SQL
        String sql = "SELECT * FROM NHANVIEN WHERE TENNV LIKE ?";
    
        try {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
            
        // Tạo PreparedStatement
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, "%" + tenNhanVien + "%"); // Tìm kiếm theo tên khách hàng (sử dụng wildcard '%')

        // Thực thi truy vấn và nhận kết quả
        ResultSet rs = pstmt.executeQuery();

        // Hiển thị kết quả truy vấn trên bảng
        while (rs.next()) {
            String maNV = rs.getString("MaNV");
            String tenNV = rs.getString("TenNV");
            String gioitinh = rs.getString("GioiTinh");
            String sdt = rs.getString("SDT");
            String hinh = rs.getString("Hinh");
            String chucvu = rs.getString("ChucVu");
            String diachi = rs.getString("DiaChi");
            int trangThai = rs.getInt("TrangThai");

            // Thêm hàng mới vào bảng với thông tin của khách hàng tìm thấy
            model.addRow(new Object[]{maNV, tenNV, gioitinh, sdt, hinh, chucvu, diachi, trangThai});
        }

        // Đóng tài nguyên
        rs.close();
        pstmt.close();
        
    } catch (SQLException ex) {
        // Xử lý ngoại lệ
        ex.printStackTrace();
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnTimKiemMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        // TODO add your handling code here:
        chonHang();
    }//GEN-LAST:event_tblNhanVienMouseClicked
    // Phương thức kiểm tra sự tồn tại của mã nhân viên trong cơ sở dữ liệu
    public boolean kiemTraMaNV() { //Xem thử có tồn tại mã nhân viên ko
        String sqlQuery = "SELECT COUNT(*) FROM NHANVIEN WHERE MANV = ?";
        try (
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA", "sa", "123");
            PreparedStatement pstmt = conn.prepareStatement(sqlQuery)
        ) {
            pstmt.setString(1, txtMaNV.getText());
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                int count = rs.getInt(1);
                return count > 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }


    
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        
        int chonHang = tblNhanVien.getSelectedRow(); 
        
        if (chonHang != -1)
        {
            JOptionPane.showMessageDialog(this, "Nhân viên đã tồn tại!!!");
            return;
        }
        
        //Xử lí trùng mã nhân viên (khi mà chọn 1 nhân viên đã có và bấm thêm thì nó sẽ hiện lỗi )
        
        if (txtMaNV.getText().isEmpty()) //Kiểm tra mã kh
        {
            JOptionPane.showMessageDialog(null, "Hãy tạo mã để có thể thêm nhân viên!!!");
            return;
        }
            
        if(txtTenNV.getText().isEmpty() || txtSDT.getText().isEmpty() || txtHinh.getText().isEmpty()|| txtChucVu.getText().isEmpty()|| txtDiaChi.getText().isEmpty()) //Kiểm tra tên kh
        { 
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!!!");
            return;
        }
        
        if (txtSDT.getText().length() < 10) //Kiểm tra sdt 
        {
            JOptionPane.showMessageDialog(this, "Số điện thoại cần có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtSDT.setText("0");
            return;
        }

            try {
            String maNV = txtMaNV.getText();
            
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);

                //Tiến hành thêm khách hàng vào cơ sở dữ liệu
                String sql1 = "INSERT INTO NhanVien(MaNV, TenNV, GioiTinh, SDT, Hinh, ChucVu, DiaChi, TrangThai) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                
                PreparedStatement pstmt = con.prepareStatement(sql1);
                pstmt.setString(1, txtMaNV.getText());
                pstmt.setString(2, txtTenNV.getText());
                
//                pstmt.setString(3, txtGioiTinh.getText());
                pstmt.setString(3, (String)cboGioiTinh.getSelectedItem()); // Lấy giá trị từ ComboBox
                
                pstmt.setString(4, txtSDT.getText());
                pstmt.setString(5, txtHinh.getText());
                pstmt.setString(6, txtChucVu.getText());
                pstmt.setString(7, txtDiaChi.getText());
                pstmt.setInt(8, 1); // Giả sử TrangThai luôn là 1
                pstmt.executeUpdate();
                pstmt.close();

                JOptionPane.showMessageDialog(null, "Thêm thành công !!!");
                    
                con.close();
                xoaText();
                    
                tblNhanVien.clearSelection();
                loadfrmNhanVien();
                
        } catch (SQLException ex) {
        // Xử lý ngoại lệ nếu có
        ex.printStackTrace();
        }   catch (ClassNotFoundException ex) {
                Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtSDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if (Character.isLetter(c) || txtSDT.getText().length() >= 10) //Nếu sdt nhập chữ or nhập nhiều hơn 10 số thì sẽ Ko cho nhập 
        {  
            evt.consume(); // Hủy bỏ sự kiện nhập liệu
            return;
        }

    // Kiểm tra nếu ký tự đầu khác 0 và không đủ 10 ký tự thì hiển thị thông báo lỗi
    if (txtSDT.getText().isEmpty() || (txtSDT.getText().charAt(0) != '0' && txtSDT.getText().length() < 10)) 
    {
        JOptionPane.showMessageDialog(this, "Số điện thoại CHỈ ĐƯỢC ghi SỐ, phải BẮT ĐẦU bằng số 0 và có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        txtSDT.setText("0");
    }
    
    }//GEN-LAST:event_txtSDTKeyTyped

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        
        if(txtMaNV.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Hãy chọn nhân viên cần sửa trong bảng!!!");
            return;
        }
        
        if(txtTenNV.getText().isEmpty() || txtSDT.getText().isEmpty()) //Kiểm tra tên kh
        { 
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin Tên nhân viên và Số điện thoại!");
            return;
        }
        
        if (txtSDT.getText().length() < 10) //Kiểm tra sdt 
        {
            JOptionPane.showMessageDialog(this, "Số điện thoại cần có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtSDT.setText("0");
            return;
        }
        
            try 
       {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
                       
            String sql = "update NHANVIEN set TENNV = ?, GIOITINH = ?, SDT = ?, HINH = ?, CHUCVU = ?, DIACHI = ? where MANV = ?";
            PreparedStatement st = con.prepareStatement(sql);
           
            st.setString(1,txtTenNV.getText());
            
            //st.setString(2,txtGioiTinh.getText());
            
            //Sử dụng ComboBox để lấy giá trị giới tính
            st.setString(2, (String)cboGioiTinh.getSelectedItem());
            
            st.setString(3,txtSDT.getText());
            st.setString(4,txtHinh.getText());
            st.setString(5,txtChucVu.getText());
            st.setString(6,txtDiaChi.getText());
            st.setString(7,txtMaNV.getText());
           
            int check = st.executeUpdate();
            if(check  > 0 )
               JOptionPane.showMessageDialog(null, "Cập nhật thành công!!!");
           
            con.close();
            xoaText();
            loadfrmNhanVien();
            
       } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmNhanVien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMa;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboGioiTinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDuongDan;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtChucVu;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHinh;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
