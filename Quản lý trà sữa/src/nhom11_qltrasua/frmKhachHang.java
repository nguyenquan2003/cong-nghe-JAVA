/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nhom11_qltrasua;

import Model.PhanQuyen;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author LINHPRO
 */
public class frmKhachHang extends javax.swing.JFrame {

    /**
     * Creates new form frmKhachHang
     */
    public frmKhachHang() {
        initComponents();
        
        loadfrmKhachHang();
        txtMaKH.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtTenKhachHang = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        txtTaoMa = new javax.swing.JButton();
        btnDong = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý khách hàng");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Trang Quản Lí Khách Hàng ");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTenKhachHang.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTenKhachHang.setText("Tên khách hàng:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("SĐT:");

        txtTenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKHActionPerformed(evt);
            }
        });

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSDTKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSDTKeyTyped(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Mã khách hàng:");

        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Tìm kiếm khách hàng:");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseClicked(evt);
            }
        });
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtTaoMa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtTaoMa.setText("Tạo mã");
        txtTaoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaoMaActionPerformed(evt);
            }
        });

        btnDong.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTenKhachHang, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(txtTenKH)
                            .addComponent(txtMaKH))
                        .addGap(34, 34, 34)
                        .addComponent(txtTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCapNhat)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoi)
                .addGap(18, 18, 18)
                .addComponent(btnDong)
                .addGap(0, 76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenKhachHang)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDong, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem)
                        .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Thông tin khách hàng");

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên Khách Hàng", "Số Điện Thoại"
            }
        ));
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(434, 434, 434))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(274, 274, 274))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chonHang() //Nhấn vào 1 hàng trong bảng thì nó sẽ hiện lên những TextBox
    {
        int chonHang = tblKhachHang.getSelectedRow(); 
        
        if (chonHang != -1)
        {
            txtMaKH.setText(String.valueOf(tblKhachHang.getValueAt(chonHang, 0)));
            txtTenKH.setText(String.valueOf(tblKhachHang.getValueAt(chonHang, 1)));
            txtSDT.setText(String.valueOf(tblKhachHang.getValueAt(chonHang, 2)));
        }
    }
    
    private void XoaText()
    {
        txtMaKH.setText("");
        txtTenKH.setText("");
        txtSDT.setText("");
        txtTimKiem.setText("");
        
        txtTenKH.requestFocus(); //Làm sạch hết rồi focus vào TextBox đầu
    }
    
    private void loadfrmKhachHang()
    {
        try 
        {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
            
            String sql= "select MAKH as N'Mã Khách Hàng', TENKH as N'Tên Khách Hàng', SDT as N'Số Điện Thoại' from KHACHHANG where TrangThai = 1";
            Statement st = (Statement) con.createStatement();
            
//            if(con != null) //Kiểm tra nếu kết nối thành công thì sẽ hiện ra 1 bảng thông báo thành công 
//            {
//                JOptionPane.showMessageDialog(null, "Kết nối thành công !!!");
//            }
            
            DefaultTableModel defaultTableModel = (DefaultTableModel) tblKhachHang.getModel();
            ResultSet rs = st.executeQuery(sql);
            defaultTableModel.setRowCount(0);
            
            while (rs.next())
            {
                Object object[] = {rs.getString("Mã Khách Hàng"),rs.getString("Tên Khách Hàng"),rs.getString("Số Điện Thoại")};
                defaultTableModel.addRow(object);
            }
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    private void txtTenKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKHActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSDTActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if(txtMaKH.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Hãy chọn khách hàng cần xóa !!!");
        } 
        else 
        try 
        {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
                
            String sql = "update KHACHHANG set TrangThai = ? where MAKH = ?";
            PreparedStatement st = con.prepareStatement(sql);
           
            st.setInt(1, 0);
            st.setString(2,txtMaKH.getText());
           
            int check = st.executeUpdate();
            if(check  > 0 )
               JOptionPane.showMessageDialog(null, "Xóa thành công !!!");
           
            con.close();
            XoaText();
            loadfrmKhachHang();
            
       } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        int kq= JOptionPane.showConfirmDialog(this, "Ban co muon xoa khong???","Thong bao",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE); //Hiện 1 thông báo ra màn hình 
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        XoaText();
        loadfrmKhachHang();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKHActionPerformed

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        // TODO add your handling code here:
        chonHang();
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        
        if (txtMaKH.getText().isEmpty()) //Kiểm tra mã kh
        {
            JOptionPane.showMessageDialog(null, "Hãy tạo mã để có thể thêm khách hàng!!!");
            return;
        }
            
        if(txtTenKH.getText().isEmpty() || txtSDT.getText().isEmpty()) //Kiểm tra tên kh
        { 
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin Tên khách hàng và Số điện thoại!");
            return;
        }
        
        if (txtSDT.getText().length() < 10) //Kiểm tra sdt 
        {
            JOptionPane.showMessageDialog(this, "Số điện thoại cần có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtSDT.setText("0");
            return;
        }
        
        int chonHang = tblKhachHang.getSelectedRow(); 
        
        if (chonHang != -1)
        {
            JOptionPane.showMessageDialog(this, "Khách hàng đã tồn tại!!!");
            return;
        }

            try {
            String maKH = txtMaKH.getText();
            
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            Connection con;
            con = DriverManager.getConnection(url, user,pass);

                //Tiến hành thêm khách hàng vào cơ sở dữ liệu
                String sql1 = "INSERT INTO KhachHang(MaKH, TenKH, SDT, TrangThai) VALUES (?, ?, ?, ?)";
                PreparedStatement pstmt = con.prepareStatement(sql1);
                pstmt.setString(1, txtMaKH.getText());
                pstmt.setString(2, txtTenKH.getText());
                pstmt.setString(3, txtSDT.getText());
                pstmt.setInt(4, 1); // Giả sử TrangThai luôn là 1
                pstmt.executeUpdate();
                pstmt.close();

                JOptionPane.showMessageDialog(null, "Thêm thành công !!!");
                    
                con.close();
                XoaText();
                    
                tblKhachHang.clearSelection();
                loadfrmKhachHang();

        
    } catch (SQLException ex) {
        // Xử lý ngoại lệ nếu có
        ex.printStackTrace();
        }   catch (ClassNotFoundException ex) {
                Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        
        if(txtTenKH.getText().isEmpty() || txtSDT.getText().isEmpty()) //Kiểm tra tên kh
        { 
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin Tên khách hàng và Số điện thoại!");
            return;
        }
        
        if (txtSDT.getText().length() < 10) //Kiểm tra sdt 
        {
            JOptionPane.showMessageDialog(this, "Số điện thoại cần có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtSDT.setText("0");
            return;
        }
        
        
        if(txtMaKH.getText().isEmpty())
           JOptionPane.showMessageDialog(null, "Hãy chọn khách hàng cần cập nhật !!!");
        else
            try 
       {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
                       
            String sql = "update KHACHHANG set TENKH = ?, SDT = ? where MAKH = ?";
            PreparedStatement st = con.prepareStatement(sql);
           
            st.setString(1,txtTenKH.getText());
            st.setString(2,txtSDT.getText());
            st.setString(3,txtMaKH.getText());
           
            int check = st.executeUpdate();
            if(check  > 0 )
               JOptionPane.showMessageDialog(null, "Cập nhật thành công!!!");
           
            con.close();
            XoaText();
            loadfrmKhachHang();
            
       } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btnTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseClicked
        // TODO add your handling code here:
        if(txtTimKiem.getText().isEmpty())
        {
           JOptionPane.showMessageDialog(null, "Hãy điền tên khách hàng cần tìm!!!");
           return;
        }
        // Lấy dữ liệu từ trường nhập liệu tên khách hàng
        String tenKhachHang = txtTimKiem.getText().trim();

        // Xóa bảng hiển thị kết quả tìm kiếm (nếu có)
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);

        // Chuẩn bị truy vấn SQL
        String sql = "SELECT * FROM KhachHang WHERE TenKH LIKE ?";
    
        try {
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
            
        // Tạo PreparedStatement
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, "%" + tenKhachHang + "%"); // Tìm kiếm theo tên khách hàng (sử dụng wildcard '%')

        // Thực thi truy vấn và nhận kết quả
        ResultSet rs = pstmt.executeQuery();

        // Hiển thị kết quả truy vấn trên bảng
        while (rs.next()) {
            String maKH = rs.getString("MaKH");
            String tenKH = rs.getString("TenKH");
            String sdt = rs.getString("SDT");
            int trangThai = rs.getInt("TrangThai");

            // Thêm hàng mới vào bảng với thông tin của khách hàng tìm thấy
            model.addRow(new Object[]{maKH, tenKH, sdt, trangThai});
        }

        // Đóng tài nguyên
        rs.close();
        pstmt.close();
    } catch (SQLException ex) {
        // Xử lý ngoại lệ
        ex.printStackTrace();
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimKiemMouseClicked

    private void txtTaoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaoMaActionPerformed
        // TODO add your handling code here:
        
        try {
            String maKH = txtMaKH.getText();
            
            String user="sa";
            String pass="123";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://DESKTOP-KSEC4J7\\SQLEXPRESS:1433;databaseName=QL_QUAN_TRA_SUA";
            
            Connection con;
            con = DriverManager.getConnection(url, user,pass);
            
            //Tạo mã tự động
            String sql = "SELECT MAX(MaKH) FROM KhachHang";
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            String maKHCuoi = null;

            if (rs.next()) {
                maKHCuoi = rs.getString(1);
            }

            // Xác định mã khách hàng tiếp theo
            if (maKHCuoi == null) {
                maKH = "KH001"; // Nếu không có mã khách hàng nào trong cơ sở dữ liệu, bắt đầu từ "KH001"
            } else {
                // Trích xuất số từ mã khách hàng cuối cùng và tăng giá trị đó lên 1
                int so = Integer.parseInt(maKHCuoi.substring(2)); // Bỏ qua hai ký tự đầu tiên ("KH")
                so++;
                // Format lại số để có ba chữ số (ví dụ: 001, 012, 123)
                String soMoi = String.format("%03d", so);
                maKH = "KH" + soMoi;
            }

            // Hiển thị mã khách hàng mới trên giao diện hoặc thêm vào trường mã khách hàng tương ứng
            // Ví dụ:
            XoaText();
            txtMaKH.setText(maKH);
            
            txtSDT.setText("0");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(frmKhachHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTaoMaActionPerformed

    
    
    private void txtSDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyTyped
        // TODO add your handling code here:
        
//        char c=evt.getKeyChar();        //Chỉ cho ghi số (Ko cho ghi chữ và kí tự đặc biệt) nếu ghi khác số thì sẽ ko cho nhập
//        if(Character.isLetter(c)) 
//            evt.consume();
        
        char c=evt.getKeyChar();
        if (Character.isLetter(c) || txtSDT.getText().length() >= 10) //Nếu sdt nhập chữ or nhập nhiều hơn 10 số thì sẽ Ko cho nhập 
        {  
            evt.consume(); // Hủy bỏ sự kiện nhập liệu
            return;
        }

    // Kiểm tra nếu ký tự đầu khác 0 và không đủ 10 ký tự thì hiển thị thông báo lỗi
    if (txtSDT.getText().isEmpty() || (txtSDT.getText().charAt(0) != '0' && txtSDT.getText().length() < 10)) 
    {
        JOptionPane.showMessageDialog(this, "Số điện thoại CHỈ ĐƯỢC ghi SỐ, phải BẮT ĐẦU bằng số 0 và có ĐỦ 10 số!!!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        txtSDT.setText("0");
    }
    
    }//GEN-LAST:event_txtSDTKeyTyped

    private void txtSDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSDTKeyPressed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        // TODO add your handling code here:
        int kq= JOptionPane.showConfirmDialog(this, "Bạn có muốn đóng trang này không ???","Thông báo",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(kq==JOptionPane.YES_OPTION)
        {
           PhanQuyen  phanQuyen = new PhanQuyen();
if(phanQuyen.getTaiKhoanCu().equals("admin"))
{
       frmMain m = new frmMain();
        m.setVisible(true);
        this.dispose();
}
else 
{
    frmMainNhanVien nhanVien = new frmMainNhanVien();
    nhanVien.setVisible(true);
    this.dispose();;
}
        }
    }//GEN-LAST:event_btnDongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmKhachHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmKhachHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JButton txtTaoMa;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JLabel txtTenKhachHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
